@model ERP.Admin.Models.ComprobanteCompra
<script type="text/javascript">
    var NroTrCDD = 0;
    var arrIdCDDDelete = new Array();

    $(document).ready(function () {
        NroTrCDD = parseInt($("#HiddEditCompComp_CantDeta").val()) + 1;
        FnInitFormCompCompVer();
    });

    function FnInitFormCompCompVer() {
        var CallBy = $("#txtCompCompEdit_CallBy").val();
        if (CallBy == "ComprobanteCompraVer") {
            $("#txtCompCompNew_FechEmis").prop('disabled', true);
            $("#cmbCompCompNew_IdCompTipo").prop('disabled', true);
            $("#txtCompCompNew_NroComp").prop('disabled', true);
            $("#txtCompCompNew_FkTipoMone").prop('disabled', true);
            $("#txtCompCompNew_TipoCamb").prop('disabled', true);
            document.getElementById('btnListProv').style.display = 'none';
            document.getElementById('btnSaveEditCompComp').style.display = 'none';
            document.getElementById('btnAddProd').style.display = 'none';
            document.getElementById('ThBtnDeta').style.display = 'none';
            document.getElementById('THTotaEmpty').style.display = 'none';

            var table = document.getElementById('tBodyCompCompDeta');
            var cantRows = table.rows.length;
            var newTr = "";
            if (cantRows > 0) {
                for (var i = 0; i < cantRows; i++) {
                    newTr = table.rows[i].id;
                    if (newTr.trim() != "") {
                        document.getElementById("TDBtnDeleteDeta" + newTr).style.display = 'none';
                    }
                }
            }
        }
    }

    function AddTRDetalleCompraDiversa(pDesc, pCant, pPrec) {
        var IdTrCDD = "IdTrCDD" + NroTrCDD;
        var TDIdCDD = "TDIdCDD" + IdTrCDD;
        var TDDescCDD = "TDDescCDD" + IdTrCDD;
        var TDCantCDD = "TDCantCDD" + IdTrCDD;
        var TDPrecCDD = "TDPrecCDD" + IdTrCDD;
        var TDSubTotaCDD = "TDSubTotaCDD" + IdTrCDD;
        var TDBtnDeleteDeta = "TDBtnDeleteDeta" + IdTrCDD;

        var pSubTota = (parseFloat(pCant) * parseFloat(pPrec)).toFixed(2);
        var strBtnDeleDeta = '@Html.Bootstrap().Button().Text("").Color(BootstrapColors.Default).HtmlAttributes(new { @class = "danger", @title="Eliminar Detalle", @onclick = "FnDeleteDetalle(this)" }).Shiny().Size(ButtonSize.Mini).IconOnly().IconPrepend(FontAwesome.Times)';

        var row = $("<tr id='" + IdTrCDD + "'>" +
            "<td id='" + TDIdCDD + "' style='display: none;'>0</td>" +
            "<td id='" + TDDescCDD + "' class='input-xs'>" + pDesc.toUpperCase() + "</td>" +
            "<td id='" + TDCantCDD + "' class='input-xs' style='text-align: right;'>" + pCant + "</td>" +
            "<td id='" + TDPrecCDD + "' class='input-xs' style='text-align: right;'>" + pPrec + "</td>" +
            "<td id='" + TDSubTotaCDD + "' class='input-xs' style='text-align: right;'>" + pSubTota + "</td>" +
            "<td id='" + TDBtnDeleteDeta + "' class='input-xs' style='text-align: center;'>" + strBtnDeleDeta + "</td>" +
            "</tr>");
        $("#tBodyCompCompDeta").append(row);
        FnCalculaTotaleComprobanteCompra();
        NroTrCDD++;
    }

    function FnDeleteDetalle(obj) {
        var IdTRsele = obj.parentElement.parentElement.id;
        var IdCDD = document.getElementById("TDIdCDD" + IdTRsele).innerHTML;
        if (parseInt(IdCDD) > 0) {
            arrIdCDDDelete[arrIdCDDDelete.length] = IdCDD;
        }
        var tr = $("#" + IdTRsele);
        tr.remove();
        FnCalculaTotaleComprobanteCompra();
    }

    function FnCalculaTotaleComprobanteCompra() {
        var table = document.getElementById('tBodyCompCompDeta');
        var cantRows = table.rows.length;
        var newTr = "";
        var newTotaNeto = "";
        var newTotaIgv = "";
        var newTotaBruto = "";
        var ventSumaTotaNeto = 0;
        var ventSumaTotaIgv = 0;
        var ventSumaTotaBruto = 0;
        if (cantRows > 0) {
            for (var i = 0; i < cantRows; i++) {
                newTr = table.rows[i].id;
                if (newTr.trim() != "") {
                    newTotaBruto = document.getElementById("TDSubTotaCDD" + newTr).innerHTML;
                    ventSumaTotaBruto = parseFloat(ventSumaTotaBruto) + parseFloat(newTotaBruto);
                }
            }
            document.getElementById("TDTotalCompComp").innerHTML = ventSumaTotaBruto.toFixed(2);
        }
    }

    ////////////////////////////
    function FnAddDataProvedor(IdProv, CodiProv, RucProv, RazoSociProv) {
        $("#txtCompCompNew_FkProveedor").val(IdProv);
        $("#txtCompCompNew_ProvCodigo").val(CodiProv);
        $("#txtcompCompNew_ProvRucRazoSocial").val(RucProv + " - " + RazoSociProv);
    }
</script>
@{
    int NroTrCDD = 1;
    int CantDeta = 0;
    string IdTrCDD = "";
    string TDIdCDD = "";
    string TDDescCDD = "";
    string TDCantCDD = "";
    string TDPrecCDD = "";
    string TDSubTotaCDD = "";
    string TDBtnDeleteDeta = "";

    decimal SubTotaDeta = 0;
    decimal SumTotaCD = 0;
    int IdCompComp = Model.id_comprobante_compra;
    string FechCompComp = Convert.ToDateTime(Model.f_emision).ToString("dd/MM/yyyy");
    if (ViewBag.CompraDiversasDetalle != null)
    {
        CantDeta = ViewBag.CompraDiversasDetalle.Count;
    }
    string CallBy = ViewBag.CallBy;
}
@Html.Hidden("HiddEditCompComp_IdCompComp", IdCompComp)
@Html.Hidden("HiddEditCompComp_CantDeta", CantDeta)
@Html.Hidden("txtCompCompEdit_Esta", Model.estado)
@Html.Hidden("txtCompCompEdit_CallBy", CallBy)
<div class="row">
    <div class="col-lg-12 col-sm-12 col-xs-12">
        <div class="widget">
            <div class="widget-header bordered-bottom bordered-red">
                <span class="widget-caption">Nuevo Comprobante Compra</span>
            </div>
            <div class="widget-body">
                <div id="horizontal-form">
                    @using (var f = Html.Bootstrap().Begin(new Form().Type(FormType.Horizontal)))
                    {
                        <div class="row">
                            <div class="form-group" style="margin:0">
                                <label class="col-sm-1 control-label" style="text-align: right;">Fecha <sup>*</sup></label>
                                <div class="col-md-2">
                                    <div class='input-group'>
                                        <input class='form-control date-picker' id='txtCompCompNew_FechEmis' type='text' data-date-format='dd/mm/yyyy' value="@FechCompComp">
                                        <span class='input-group-addon'>
                                            <i class='fa fa-calendar'></i>
                                        </span>
                                    </div>
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right; ">Proveedor </label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().TextBox("txtCompCompNew_ProvCodigo").Value(Model.cod_proveedor).Placeholder("Código").Disable().Append(new BootstrapButton("button").Text("").HtmlAttributes(new { @title = "Listado", @onclick = "FnListaProveedor('OrdeCompCreate')", @id = "btnListProv" }).IconOnly().IconPrepend(FontAwesome.ListAlt)).Size(InputSize.Small)
                                    @Html.Hidden("txtCompCompNew_FkProveedor", Model.fk_proveedor)
                                    <div class="horizontal-space"></div>
                                </div>
                                <div class="col-md-6">
                                    @Html.Bootstrap().TextBox("txtcompCompNew_ProvRucRazoSocial").Value(Model.ruc + " - " + Model.razon_social).HtmlAttributes(new { @class = "form-control", @onkeyup = "InputToUpper(this)", @disabled = "disabled" }).Placeholder("RUC - Razón Social").Size(InputSize.Small)
                                    <div class="horizontal-space"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group" style="margin:0">
                                <label class="col-sm-1 control-label" style="text-align: right; ">Tipo <sup>*</sup></label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().DropDownList("cmbCompCompNew_IdCompTipo", new SelectList(ViewBag.ComprobanteTipo, "id_comprobante_tipo", "descripcion", selectedValue: Model.fk_comprobante_tipo)).Size(InputSize.Small)
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right; ">Nro <sup>*</sup></label>
                                <div class="col-md-2">
                                    <input type="text" id="txtCompCompNew_NroComp" value="@Model.nro_comprobante" data-mask="9999-9999999" class="form-control" placeholder="Nro Comprobante">
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right; ">Moneda </label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().DropDownList("txtCompCompNew_FkTipoMone", new SelectList(ViewBag.TipoMoneda, "id_tipo_moneda", "descripcion", selectedValue: Model.fk_tipo_moneda)).Size(InputSize.Small)
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-2 control-label" style="text-align: right; ">Tipo Cambio </label>
                                <div class="col-md-1">
                                    @Html.Bootstrap().TextBox("txtCompCompNew_TipoCamb").Value(Model.tipo_cambio).HtmlAttributes(new { type = "number", style = "text-align: right;" }).Size(InputSize.Small)
                                    <div class="horizontal-space"></div>
                                </div>
                            </div>
                        </div>
                        <div class="horizontal-space"></div>
                        <div class="widget-header bordered-bottom bordered-blue">
                            <span class="widget-caption">Detalles</span>
                            @Html.Bootstrap().Button().Text("Agregar").Id("btnAddProd").Color(BootstrapColors.Primary).IconPrepend(FontAwesome.ShoppingCart).Size(ButtonSize.Mini).HtmlAttributes(new { @title = "Listado", @onclick = "FnViewAddDetalle()", @style = "margin-top: 5px;" })
                        </div>
                        <div class="horizontal-space"></div>
                        <div class="row">
                            <div class="col-md-12">
                                <table class="table table-striped table-hover table-bordered" id="tblCompCompDeta">
                                    <thead>
                                        <tr role="row">
                                            <th style="display: none;">
                                                ID_COMPRA_DIVERSA_DETALLE
                                            </th>
                                            <th style="width: 60%;">
                                                Producto
                                            </th>
                                            <th style="width: 10%; text-align: right;">
                                                Cantidad
                                            </th>
                                            <th style="width: 10%; text-align: right;">
                                                Precio
                                            </th>
                                            <th style="width: 10%; text-align: right;">
                                                Sub-Total
                                            </th>
                                            <th id="ThBtnDeta" style="width: 10%; text-align: center;">
                                                ...
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="tBodyCompCompDeta">
                                        @foreach (var item in ViewBag.CompraDiversasDetalle)
                                        {
                                            IdTrCDD = "IdTrCDD" + NroTrCDD;
                                            TDIdCDD = "TDIdCDD" + IdTrCDD;
                                            TDDescCDD = "TDDescCDD" + IdTrCDD;
                                            TDCantCDD = "TDCantCDD" + IdTrCDD;
                                            TDPrecCDD = "TDPrecCDD" + IdTrCDD;
                                            TDSubTotaCDD = "TDSubTotaCDD" + IdTrCDD;
                                            TDBtnDeleteDeta = "TDBtnDeleteDeta" + IdTrCDD;
                                            SubTotaDeta = Math.Round(item.cantidad * item.precio, 2);
                                            SumTotaCD = SumTotaCD + SubTotaDeta;
                                            NroTrCDD++;
                                            <tr id='@IdTrCDD'>
                                                <td id='@TDIdCDD' style="display: none;">@item.id_compra_diversas_detalle</td>
                                                <td id='@TDDescCDD' class='input-xs'>@item.descripcion</td>
                                                <td id='@TDCantCDD' class='input-xs' style='text-align: right;'>@item.cantidad</td>
                                                <td id='@TDPrecCDD' class='input-xs' style='text-align: right;'>@item.precio</td>
                                                <td id='@TDSubTotaCDD' class='input-xs' style='text-align: right;'>@SubTotaDeta</td>
                                                <td id='@TDBtnDeleteDeta' class='input-xs' style='text-align: center;'>
                                                    @Html.Bootstrap().Button().Text("").Color(BootstrapColors.Default).HtmlAttributes(new { @class = "danger", @title = "Eliminar Detalle", @onclick = "FnDeleteDetalle(this)" }).Shiny().Size(ButtonSize.Mini).IconOnly().IconPrepend(FontAwesome.Times)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <table class="table table-striped table-hover table-bordered" id="tblTotalCompComp">
                                    <thead>
                                        <tr role="row">
                                            <td style="width: 80%; text-align: right;">
                                                TOTAL
                                            </td>
                                            <td id="TDTotalCompComp" style="width: 10%; text-align: right;">@SumTotaCD</td>
                                            <td id="THTotaEmpty" style="width: 10%; text-align: right;"></td>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                            <div class="horizontal-space"></div>
                            <div class="row">
                                <div class="col-md-4" style="text-align:right;vertical-align:middle;width:50%">
                                    @Html.Bootstrap().Button().Text("Guardar").Id("btnSaveEditCompComp").Color(BootstrapColors.Blue).Shiny().HtmlAttributes(new { @onclick = "FnGuardarCompCompra()" })
                                </div>
                                <div class="col-md-2">
                                    <button class="btn bg-blue shiny" type="button" id="btnCancel" data-dismiss="modal">Cancelar</button>
                                </div>
                            </div>
                    }
                </div>
            </div>

        </div>
    </div>
</div>
<div id="spinnerCompCompCreate" class="loading">
    <img src="~/img/spinner2.gif" alt="Loading" />
</div>
<script type="text/javascript">
    var arrCompCompDive = new Array();
    $(document).ready(function () {
        $("#spinnerCompCompCreate").hide();
        //Inicia();
        $('#spinnerCompCompCreate').bind("ajaxSend", function () {
            $(this).show();
        }).bind("ajaxComplete", function () {
            $(this).hide();
        });
        $('#loading').hide().ajaxStart(function () {
            $(this).show();
        }).ajaxStop(function () {
            $(this).hide();
            });
        $('.date-picker').datepicker();
    });

    function FnGuardarCompCompra() {
        var IdCompComp = $("#HiddEditCompComp_IdCompComp").val();
        var FkProv = $("#txtCompCompNew_FkProveedor").val();
        var FkCompTipo = $("#cmbCompCompNew_IdCompTipo").val();
        var FkTipoMone = $("#txtCompCompNew_FkTipoMone").val();
        var TipoCamb = $("#txtCompCompNew_TipoCamb").val();
        var NroCompComp = $("#txtCompCompNew_NroComp").val();
        var FechEmis = $("#txtCompCompNew_FechEmis").val();
        var CantTrs = document.getElementById("tBodyCompCompDeta").rows.length;
        var totaBrut = parseFloat(document.getElementById("TDTotalCompComp").innerHTML);
        var EstaCompComp = $("#txtCompCompEdit_Esta").val();
        var flgError = 0;
        if (parseInt(FkCompTipo) == 0) {
            sweetAlert("", "Seleccione Tipo de Comprobante", "error");
            flgError = 1;
        } else if (NroCompComp.trim() == "") {
            sweetAlert("", "Ingrese Nro del Comprobante", "error");
            flgError = 1;
        } else if (FechEmis.trim() == "") {
            sweetAlert("", "Ingrese fecha de emisión", "error");
            flgError = 1;
        } else if (FkTipoMone == "2") {
            if (TipoCamb == "") {
                sweetAlert("", "Ingrese Tipo de Cambio", "error");
                flgError = 1;
            } else if (parseFloat(TipoCamb) == 0) {
                sweetAlert("", "Ingrese Tipo de Cambio", "error");
                flgError = 1;
            }
        } else if (CantTrs == 0) {
            sweetAlert("", "No existen detalles para el comprobante", "error");
            flgError = 1;
        }
        if (flgError == 0) {
            FnLlenaArrayCompCompDiveDetalle();
            if (FkTipoMone == "1") {
                TipoCamb = 0;
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveEditComprobanteCompraDiversa", "ComprobanteCompra")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    IdCompComp: IdCompComp, FkProv: FkProv, FkCompTipo: FkCompTipo, FkTipoMone: FkTipoMone, NroCompComp: NroCompComp,
                    FechEmis: FechEmis, totaBrut: totaBrut, EstaCompComp: EstaCompComp, TipoCamb: TipoCamb, arrIdCDDDelete: arrIdCDDDelete,
                    arrCompCompDive: arrCompCompDive
                }),
                dataType: 'json',
                beforeSend: function () {
                    $('#spinnerCompCompCreate').show();
                },
                traditional: true,
                success: function (data) {
                    swal({
                        title: 'Exito!',
                        text: data,
                        type: 'success',
                        showCancelButton: false,
                        confirmButtonText: 'Ok'
                    }).then(function () {
                        window.location.reload();
                    });
                },
                error: function (data) {
                    sweetAlert("", data.responseText, "error");
                },
                complete: function () {
                    //check that it does exist and remove
                    if ($('#spinnerCompCompCreate').length > 0) {
                        $('#spinnerCompCompCreate').hide();
                    }
                }
            });
        }
    }

    function FnLlenaArrayCompCompDiveDetalle() {
        arrCompCompDive = [];
        var IndArr = 0;
        var table = document.getElementById('tBodyCompCompDeta');
        var cantRows = table.rows.length;
        var newTr = "";
        var newIdDeta = "";
        var newDescDeta = "";
        var newCantDeta = "";
        var newPrecDeta = "";
        if (cantRows > 0) {
            for (var i = 0; i < cantRows; i++) {
                newTr = table.rows[i].id;
                if (newTr.trim() != "") {
                    newIdDeta = document.getElementById("TDIdCDD" + newTr).innerHTML;
                    newDescDeta = document.getElementById("TDDescCDD" + newTr).innerHTML;
                    newCantDeta = document.getElementById("TDCantCDD" + newTr).innerHTML;
                    newPrecDeta = document.getElementById("TDPrecCDD" + newTr).innerHTML;
                    if (parseInt(newIdDeta) == 0) {
                        arrCompCompDive[IndArr] = new Array(4);
                        arrCompCompDive[IndArr][0] = newIdDeta.trim();
                        arrCompCompDive[IndArr][1] = newDescDeta.trim();
                        arrCompCompDive[IndArr][2] = newCantDeta.trim();
                        arrCompCompDive[IndArr][3] = newPrecDeta.trim();
                        IndArr++;
                    }
                }
            }
        }
    }
</script>