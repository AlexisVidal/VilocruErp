@{
    ViewBag.Title = "Registro de Trabajadores";
    ViewBag.Description = "trabajadores";
    Layout = "~/Views/Shared/_Default.cshtml";
}

@using System
@model IEnumerable<ERP.Admin.Models.Trabajador>

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">Listado </span>
                <div class="widget-buttons">
                    @if (Request.UrlReferrer != null)
                    {
                        <a class="btn btn-danger" style="width:60px" onclick="history.go(-1); return false;" href="#">Atras</a>
                    }
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>
                    <a href="#" data-toggle="dispose">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <div class="table-toolbar">
                    <a id="NewTrabajador" class="btn btn-danger">
                        Nuevo registro
                    </a>
                </div>
                <table class="table table-striped table-hover table-bordered" id="editabledatatable">
                    <thead>
                        <tr role="row">
                            <th style="display:none">
                                @Html.DisplayNameFor(model => model.id_trabajador)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.descripcion)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.nombres)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.apellido_paterno)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.apellido_materno)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Fnacimiento)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.email)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.dni)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.NEstado)
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td style="display:none">
                                    @Html.DisplayFor(modelItem => item.id_trabajador)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.descripcion)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.nombres)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.apellido_paterno)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.apellido_materno)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Fnacimiento)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.email)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.dni)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NEstado)
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-primary edita" style="padding: 2px; font-size: small; margin-top: -5px">Editar</button>
                                    <button class="btn btn-sm btn-danger elimina" style="padding: 2px; font-size: small; margin-top: -5px">Desactivar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id='myModalNew' class='modal fade in' role="dialog">
    <div class="modal-dialog" style="width:750px; height:auto">
        <div class="modal-content">
            <div id='myModalContentNew'></div>
        </div>
    </div>
</div>

@section PageScripts{
    <link href="~/assets/css/dataTables.bootstrap.css" rel="stylesheet" />
    <link href="~/assets/css/jqueryui/jquery-ui.css" rel="stylesheet" />
    <script src="~/assets/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/ZeroClipboard.js"></script>
    <script src="~/assets/js/datatable/dataTables.tableTools.min.js"></script>
    <script src="~/assets/js/datatable/dataTables.bootstrap.min.js"></script>
    <script src="~/assets/js/datatable/datatables-init.js"></script>

    <script src="~/assets/js/jqueryui/jquery-ui.js"></script>
    <script src="~/assets/js/validation/bootstrapValidator.js"></script>

    <script>
        $(document).ready(function () {

        });
        var id_trabajador = 0;
        var isuser = '0';
        $('#myModalNew').on('hide.bs.modal', function (e) {
            window.location.reload();
        });
        $('#myModalNew').on('shown.bs.modal', function (e) {
            //$("#usuarioclave").hide(100);
            $('input[type="checkbox"]').click(function () {
                if ($(this).is(":checked")) {
                    $("#usuarioclave").show(100);
                    isuser = "1";
                }
                else if ($(this).is(":not(:checked)")) {
                    $("#usuarioclave").hide(100);
                    isuser = "0";
                }
            });
            var idx = $("#id_trabajadorx").val();
            var fkpersonaxx = $("#fkpersonax").val();
            var fktipotrabajadorxx = $("#fktipotrabajadorx").val();
            var idusuarioxx = $("#idusuariox").val();
            console.log("fktipotrabajadorxx:" + fktipotrabajadorxx);
            if (idx != "0") {
                $("#txtValBus_persona").slideToggle();
                $("#txtValBus_tipo").val(fktipotrabajadorxx);
                if (idusuarioxx != "0") {
                    $('input[type="checkbox"]').attr('checked', true);
                    $("#usuarioclave").show(100);
                } else {
                    $('input[type="checkbox"]').attr('checked', false);
                    $("#usuarioclave").hide(100);
                }
            } else {
                $("#txtValBus_persona").removeAttr('disabled');;
            }

            $("#GuardarTrabajador").click(function () {

                var id_trabajador_save = 0;
                var fkpersona = $("#txtValBus_persona").val();
                
                var fktipotra = $("#txtValBus_tipo").val();
                var password = $("#password").val();

                if (password === '' && isuser === '1' ) {
                    sweetAlert("", "Datos Incompletos", "error");
                    $("#dni").focus();
                    return false;
                }
                id_trabajador_save = parseInt($("#id_trabajadorx").val(), 10);
                if (id_trabajador_save > 0) {
                    console.log("fktipox");
                    fkpersona = parseInt($("#fkpersonax").val(), 10);
                }
                //if (idx == 0) {
                    $.ajax({
                        type: 'POST',
                        //url: "SaveTraslado",
                        url: '@Url.Action("GuardaTrabajador", "Trabajador")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            id_trabajador_save: id_trabajador_save, fkpersona: fkpersona, fktipotra: fktipotra, password: password
                        }),
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            console.log(data);
                            id_persona = data;
                            if (parseInt(id_persona, 10) > 0) {
                                swal({
                                    title: 'Exito!',
                                    text: 'Trabajador se registró correctamente',
                                    type: 'success',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Ok'
                                }, function () {

                                })
                                console.log("salirs");
                                $("#btnCancel").click();
                            } else {
                                sweetAlert("", "No se pudo registrar!", "error");
                                id_persona = 0;
                            }
                        }
                    });
                @*}
                else {
                    $.ajax({
                        type: 'POST',
                        //url: "SaveTraslado",
                        url: '@Url.Action("GuardaTrabajador", "Trabajador")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            id_persona: id_persona_save, nombres: nombres, apellido_paterno: apellido_paterno, apellido_materno: apellido_materno,
                            f_nacimiento: f_nacimiento, email: email, dni: dni
                        }),
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            console.log(data);
                            id_persona = data;
                            if (parseInt(id_persona, 10) > 0) {
                                swal({
                                    title: 'Exito!',
                                    text: 'Persona se actualizó correctamente',
                                    type: 'success',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Ok'
                                }, function () {

                                })
                                console.log("salirs");
                                $("#btnCancel").click();
                            } else {
                                sweetAlert("", "No se pudo registrar!", "error");
                                id_persona = 0;
                            }
                        }
                    });
                }*@
            });
        });

        $(document).on('click', '.edita', function () {
                    debugger;
                    var tableRow = $(this).closest("tr");
                    console.log("thiscloses: " + JSON.stringify(tableRow));
                    id_trabajador = tableRow.find("td:eq(0)").text();
                    console.log("id_trabajador: " + id_trabajador);
                    id_trabajador = id_trabajador.trim();
                    console.log("idgeneral: " + id_trabajador);
                    var options = { "backdrop": "static", keyboard: false };
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("RegistroTrabajador", "Mantenimiento")',
                        contentType: "application/json; charset=utf-8",
                        data: { id_trabajador: id_trabajador },
                        dataType: 'html',
                        success: function (response) {
                            $('#myModalContentNew').html(response);
                            $('#myModalNew').modal(options);
                            $('#myModalNew').modal('show');
                        },
                        error: function (request, status, error) {
                            alert(request.responseText);
                        }
                    });
                    return false;
        });



        $("#NewTrabajador").click(function () {
            //debugger;
            var options = { "backdrop": "static", keyboard: false };
            $.ajax({
                type: 'GET',
                url: '@Url.Action("RegistroTrabajador", "Mantenimiento")',
                contentType: "application/json; charset=utf-8",
                dataType: 'html',
                success: function (response) {
                    $('#myModalContentNew').html(response);
                    $('#myModalNew').modal(options);
                    $('#myModalNew').modal('show');
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        });
        $(document).ready(function () {
            Inicia();
        });
        //InitiateEditableDataTable.init();
        function Inicia() {
            //Datatable Initiating
            oTable = $('#editabledatatable').dataTable({
                "aLengthMenu": [
                    [5, 15, 20, 100, -1],
                    [5, 15, 20, 100, "All"]
                ],
                "retrieve": "true",
                "iDisplayLength": 20,
                "sPaginationType": "bootstrap",
                "sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                "oTableTools": {
                    "aButtons": [
                        //"copy",
                        "print"
                        //,
                        //{
                        //    "sExtends": "collection",
                        //    "sButtonText": "Save <i class=\"fa fa-angle-down\"></i>",
                        //    "aButtons": ["csv", "xls", "pdf"]
                        //}
                    ],
                    "sSwfPath": "assets/swf/copy_csv_xls_pdf.swf"
                },
                "language": {
                    "search": "",
                    "sLengthMenu": "_MENU_",
                    "oPaginate": {
                        "sPrevious": "Ant",
                        "sNext": "Sig"
                    }
                },

                "aoColumns": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    { "bSortable": false }
                ]
            });
            //console.log("nRowoTable: " + JSON.stringify($('#editabledatatable')));
            var isEditing = null;

            //Add New Row
            $('#editabledatatable_new').click(function (e) {
                e.preventDefault();
                var aiNew = oTable.fnAddData([
                    '', '', '', '',
                    '<a href="#" class="btn btn-success btn-xs save"><i class="fa fa-edit"></i> Save</a> <a href="#" class="btn btn-warning btn-xs cancel" data-mode="new"><i class="fa fa-times"></i> Cancel</a>'
                ]);
                console.log("aiNew: " + aiNew);
                var nRow = oTable.fnGetNodes(aiNew[0]);

                editAddedRow(oTable, nRow);
                isEditing = nRow;
            });

            //Delete an Existing Row
            $('#editabledatatable').on("click", 'a.delete', function (e) {
                e.preventDefault();

                if (confirm("Are You Sure To Delete This Row?") == false) {
                    return;
                }

                var nRow = $(this).parents('tr')[0];
                oTable.fnDeleteRow(nRow);
                alert("Row Has Been Deleted!");
            });

            //Cancel Editing or Adding a Row
            $('#editabledatatable').on("click", 'a.cancel', function (e) {
                e.preventDefault();
                if ($(this).attr("data-mode") == "new") {
                    var nRow = $(this).parents('tr')[0];
                    oTable.fnDeleteRow(nRow);
                    isEditing = null;
                } else {
                    restoreRow(oTable, isEditing);
                    isEditing = null;
                }
            });

            //Edit A Row
            $('#editabledatatable').on("click", 'a.edit', function (e) {
                e.preventDefault();

                var nRow = $(this).parents('tr')[0];

                if (isEditing !== null && isEditing != nRow) {
                    restoreRow(oTable, isEditing);
                    editRow(oTable, nRow);
                    isEditing = nRow;
                } else {
                    editRow(oTable, nRow);
                    isEditing = nRow;
                }
            });

            //Save an Editing Row
            $('#editabledatatable').on("click", 'a.save', function (e) {
                e.preventDefault();
                if (this.innerHTML.indexOf("Save") >= 0) {
                    saveRow(oTable, isEditing);
                    isEditing = null;
                    //Some Code to Highlight Updated Row
                }
            });


            function restoreRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);

                for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                    oTable.fnUpdate(aData[i], nRow, i, false);
                }

                oTable.fnDraw();
            }

            function editRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);
                jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
                jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';
                jqTds[2].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[2] + '">';
                jqTds[3].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[3] + '">';
                jqTds[4].innerHTML = '<a href="#" class="btn btn-success btn-xs save"><i class="fa fa-save"></i> Save</a> <a href="#" class="btn btn-warning btn-xs cancel"><i class="fa fa-times"></i> Cancel</a>';
            }

            function editAddedRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);
                jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
                jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';
                jqTds[2].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[2] + '">';
                jqTds[3].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[3] + '">';
                jqTds[4].innerHTML = aData[4];
            }

            function saveRow(oTable, nRow) {
                var jqInputs = $('input', nRow);
                oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                oTable.fnUpdate(jqInputs[2].value, nRow, 2, false);
                oTable.fnUpdate(jqInputs[3].value, nRow, 3, false);
                oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Edit</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Delete</a>', nRow, 4, false);
                oTable.fnDraw();
            }

            function cancelEditRow(oTable, nRow) {
                var jqInputs = $('input', nRow);
                oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                oTable.fnUpdate(jqInputs[2].value, nRow, 2, false);
                oTable.fnUpdate(jqInputs[3].value, nRow, 3, false);
                oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Edit</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Delete</a>', nRow, 4, false);
                oTable.fnDraw();
            }
        }
    </script>

}