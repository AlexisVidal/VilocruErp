@model ERP.Admin.Models.ComprobanteCompra
<script src="~/Scripts/UserFunction.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        FnCalculTotalesIni();
    });

    function FnCalculTotalesIni() {
        var IndArr = 0;
        var table = document.getElementById('tBodyCompCompDeta');
        var cantRows = table.rows.length;
        var newTr = "";
        var FkProd = "";
        var Cant = "";
        var Prec = "";
        var Brut = 0;
        var pFlgAfecIgv = "";
        var pPorcIgv = "";
        var pTotaNeto = 0;
        var pTotaIgv = 0;
        var ventSumaTotaNeto = 0;
        var ventSumaTotaIgv = 0;
        var ventSumaTotaBruto = 0;
        if (cantRows > 0) {
            for (var i = 0; i < cantRows; i++) {
                newTr = table.rows[i].id;
                if (newTr.trim() != "") {
                    //Cant = document.getElementById("TDCant" + newTr).innerHTML;
                    var objTxt = document.getElementById("TDCantCCD" + newTr).children;
                    Cant = objTxt[0].value;
                    //Prec = document.getElementById("TDPrec" + newTr).innerHTML;
                    objTxt = document.getElementById("TDPrecCCD" + newTr).children;
                    Prec = objTxt[0].value;
                    pFlgAfecIgv = document.getElementById("TDFlgAfecIgv" + newTr).innerHTML;
                    pPorcIgv = document.getElementById("TDPorcIgv" + newTr).innerHTML;
                    Brut = parseFloat(Cant) * parseFloat(Prec);
                    if (pFlgAfecIgv.trim() == "1") {
                        pTotaIgv = CalculaIgv(Brut, pPorcIgv);
                    }
                    pTotaNeto = (parseFloat(Brut) - parseFloat(pTotaIgv)).toFixed(2);
                    document.getElementById("TDTotaNeto" + newTr).innerHTML = pTotaNeto;
                    document.getElementById("TDTotaIgv" + newTr).innerHTML = parseFloat(pTotaIgv).toFixed(2);
                    document.getElementById("TDTotaBruto" + newTr).innerHTML = parseFloat(Brut).toFixed(2);

                    ventSumaTotaNeto = parseFloat(ventSumaTotaNeto) + parseFloat(pTotaNeto);
                    ventSumaTotaIgv = parseFloat(ventSumaTotaIgv) + parseFloat(pTotaIgv);
                    ventSumaTotaBruto = parseFloat(ventSumaTotaBruto) + parseFloat(Brut);
                }
            }
            document.getElementById("TDCompVentTotaNeto").innerHTML = ventSumaTotaNeto.toFixed(2);
            document.getElementById("TDCompVentTotaIgv").innerHTML = ventSumaTotaIgv.toFixed(2);
            document.getElementById("TDCompVentTotaBruto").innerHTML = ventSumaTotaBruto.toFixed(2);
        }
    }

    function FnDeleteDetalle(obj) {
        var IdTRsele = obj.parentElement.parentElement.id;
        var tr = $("#" + IdTRsele);
        tr.remove();
        FnCalculaTotaleComprobanteVenta();
    }

    function FnValidaPrecio(obj) {
        var IdTRsele = obj.parentElement.parentElement.id;
        var newPrec = parseInt(obj.value);
        if (newPrec <= 0) {
            sweetAlert("", "Precio no válido", "error");
            obj.value = obj.oldvalue;
        } else {
            FnCalculaSubtotal(IdTRsele);
        }
    }

    function FnValidaCantidad(obj) {
        var IdTRsele = obj.parentElement.parentElement.id;
        var CantHidd = document.getElementById('TDHiddCant' + IdTRsele).innerHTML;
        var newCant = parseInt(obj.value);
        var newPrec = 0;
        if (newCant <= 0) {
            sweetAlert("", "Cantidad no válida", "error");
            obj.value = obj.oldvalue;
        }
        else if (parseFloat(newCant) > parseFloat(CantHidd)) {
            sweetAlert("", "Cantidad no válida", "error");
            obj.value = obj.oldvalue;
        }
        else {
            FnCalculaSubtotal(IdTRsele);
        }
    }

    function FnCalculaSubtotal(IdTRsele) {
        var objTxt = document.getElementById("TDCantCCD" + IdTRsele).children;
        var newCant = objTxt[0].value;
        objTxt = document.getElementById("TDPrecCCD" + IdTRsele).children;
        var newPrec = objTxt[0].value;

        var newFlgAfecIgv = "";
        var newTotaBruto = 0;
        var newTotaNeto = 0;
        var newTotaIgv = 0;
        var newPorcIgv = 0;

        newTotaBruto = (parseFloat(newCant) * parseFloat(newPrec)).toFixed(2);
        newFlgAfecIgv = document.getElementById("TDFlgAfecIgv" + IdTRsele).innerHTML;
        if (newFlgAfecIgv.trim() == "1") {
            newPorcIgv = document.getElementById("TDPorcIgv" + IdTRsele).innerHTML;
            newTotaIgv = CalculaIgv(newTotaBruto, newPorcIgv);
        }
        newTotaNeto = newTotaBruto - newTotaIgv;

        document.getElementById("TDTotaNeto" + IdTRsele).innerHTML = parseFloat(newTotaNeto).toFixed(2);
        document.getElementById("TDTotaIgv" + IdTRsele).innerHTML = parseFloat(newTotaIgv).toFixed(2)
        document.getElementById("TDTotaBruto" + IdTRsele).innerHTML = parseFloat(newTotaBruto).toFixed(2)
        FnCalculaTotaleComprobanteVenta();
    }

    function FnCalculaTotaleComprobanteVenta() {
        var table = document.getElementById('tBodyCompCompDeta');
        var cantRows = table.rows.length;
        var newTr = "";
        var newTotaNeto = "";
        var newTotaIgv = "";
        var newTotaBruto = "";
        var ventSumaTotaNeto = 0;
        var ventSumaTotaIgv = 0;
        var ventSumaTotaBruto = 0;
        if (cantRows > 0) {
            for (var i = 0; i < cantRows; i++) {
                newTr = table.rows[i].id;
                if (newTr.trim() != "") {
                    newTotaNeto = document.getElementById("TDTotaNeto" + newTr).innerHTML;
                    newTotaIgv = document.getElementById("TDTotaIgv" + newTr).innerHTML;
                    newTotaBruto = document.getElementById("TDTotaBruto" + newTr).innerHTML;
                    ventSumaTotaNeto = parseFloat(ventSumaTotaNeto) + parseFloat(newTotaNeto);
                    ventSumaTotaIgv = parseFloat(ventSumaTotaIgv) + parseFloat(newTotaIgv);
                    ventSumaTotaBruto = parseFloat(ventSumaTotaBruto) + parseFloat(newTotaBruto);
                }
            }
            document.getElementById("TDCompVentTotaNeto").innerHTML = ventSumaTotaNeto.toFixed(2);
            document.getElementById("TDCompVentTotaIgv").innerHTML = ventSumaTotaIgv.toFixed(2);
            document.getElementById("TDCompVentTotaBruto").innerHTML = ventSumaTotaBruto.toFixed(2);
        }
    }
</script>
@{
    string strFechEmisNC = DateTime.Now.ToString("dd/MM/yyyy");
    string strFechEmis = Convert.ToDateTime(Model.f_emision).ToString("dd/MM/yyyy");

    int NroTrCCDE = 1;

    decimal totaCompComp = 0;

    string CallBy = ViewBag.CallBy;
}
@Html.Hidden("txtCompCompEdit_IdCompComp", Model.id_comprobante_compra)
@Html.Hidden("txtCompCompEdit_FkProv", Model.fk_proveedor)
@Html.Hidden("txtCompCompEdit_Esta", Model.estado)
@Html.Hidden("txtCompCompEdit_CallBy", CallBy)
<div class="row">
    <div class="col-lg-12 col-sm-12 col-xs-12">
        <div class="widget">
            <div class="widget-header bordered-bottom bordered-red">
                <span class="widget-caption">NOTA DE CRÉDITO</span>
            </div>
            @using (var f = Html.Bootstrap().Begin(new Form().Type(FormType.Horizontal)))
            {
                <div class="widget-body">
                    <div id="horizontal-form">
                        <div class="row">
                            <div class="form-group" style="margin:0">
                                <label class="col-sm-1 control-label" style="text-align: right; ">Tipo <sup>*</sup></label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().DropDownList("cmbNotaCred_FkCompTipo", new SelectList(ViewBag.ComprobanteTipo, "id_comprobante_tipo", "descripcion", selectedValue: ViewBag.FkCompTipoNotaCredito)).HtmlAttributes(new { @disabled = "disabled" }).Size(InputSize.Small)
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right; ">Nro <sup>*</sup></label>
                                <div class="col-md-2">
                                    <input type="text" id="txtNotaCred_NroComp" value="" data-mask="9999-9999999" class="form-control" placeholder="Nro Comprobante">
                                </div>
                                <label class="col-sm-2 control-label" style="text-align: right;">Fecha Emision <sup>*</sup></label>
                                <div class="col-md-2">
                                    <input data-mask="99/99/9999" class="form-control" placeholder="DD/MM/YYYY" id="txtNotaCred_FechEmis" value="@strFechEmisNC" type="text">
                                </div>
                                <div class="col-md-2">
                                    @Html.Bootstrap().CheckBox("ChkNotaCred_AfecStoc").Text("Afecta Stock").IsChecked(false).HtmlAttributes(new { @class = "colored-default" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="widget-header bordered-bottom bordered-blue">
                    <span class="widget-caption">Comprobante al que afecta</span>
                </div>
                <div class="widget-body">
                    <div id="horizontal-form">
                        <div class="row">
                            <div class="form-group" style="margin:0">
                                <label class="col-sm-1 control-label" style="text-align: right;">Tipo <sup>*</sup></label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().TextBox("cmbCompCompEdit_IdCompTipo").Value(Model.descripcion_comprobante_tipo).Placeholder("Código").Disable().Size(InputSize.Small)
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right; ">Nro <sup>*</sup></label>
                                <div class="col-md-2">
                                    <input type="text" id="txtCompCompEdit_NroComp" value="@Model.nro_comprobante" data-mask="9999-9999999" class="form-control" placeholder="Nro Comprobante" disabled>
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right; ">Moneda </label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().TextBox("txtCompCompEdit_DescTipoMone").Value(Model.descripcion_tipo_moneda).Disable().Size(InputSize.Small)
                                    @Html.Hidden("txtCompCompEdit_FkTipoMone", Model.fk_tipo_moneda)
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right;">Fecha <sup>*</sup></label>
                                <div class="col-md-2">
                                    <div class='input-group'>
                                        <input class='form-control date-picker' id='txtCompCompEdit_FechEmis' type='text' data-date-format='dd/mm/yyyy' value="@strFechEmis" disabled>
                                        <span class='input-group-addon'>
                                            <i class='fa fa-calendar'></i>
                                        </span>
                                    </div>
                                    <div class="horizontal-space"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group" style="margin:0">
                                <label class="col-sm-1 control-label" style="text-align: right; ">OC <sup>*</sup></label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().TextBox("txtCompCompEdit_NroCompra").Value(Model.n_compra).Placeholder("Nro OC").Disable().Size(InputSize.Small)
                                    @Html.Hidden("txtCompCompEdit_FkCompra", Model.fk_compra)
                                    <div class="horizontal-space"></div>
                                </div>
                                <label class="col-sm-1 control-label" style="text-align: right; ">Proveedor </label>
                                <div class="col-md-2">
                                    @Html.Bootstrap().TextBox("txtCompCompEdit_ProvCodigo").Value(Model.cod_proveedor).Placeholder("Código").Disable().Size(InputSize.Small)
                                    <div class="horizontal-space"></div>
                                </div>
                                <div class="col-md-6">
                                    @Html.Bootstrap().TextBox("txtcompCompEdit_ProvRucRazoSocial").Value(Model.ruc + " - " + Model.razon_social).HtmlAttributes(new { @class = "form-control", @onkeyup = "InputToUpper(this)", @disabled = "disabled" }).Placeholder("RUC - Razón Social").Size(InputSize.Small)
                                    <div class="horizontal-space"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="widget-header bordered-bottom bordered-blue">
                    <span class="widget-caption">Detalles</span>
                </div>
                <div class="widget-body">
                    <div id="horizontal-form">
                        <div class="horizontal-space"></div>
                        <div class="row">
                            <div class="col-md-12">
                                <table class="table table-striped table-hover table-bordered" id="tblCompCompDeta">
                                    <thead>
                                        <tr role="row">
                                            <th style="text-align: center; display: none;">
                                                FK_PRODUCTO
                                            </th>
                                            <th style="text-align: center;">
                                                Código
                                            </th>
                                            <th style="text-align: center;">
                                                SKU
                                            </th>
                                            <th>
                                                Producto
                                            </th>
                                            <th>
                                                Marca
                                            </th>
                                            <th>
                                                SubFamilia
                                            </th>
                                            <th style="width: 100px; text-align: right;">
                                                Cantidad
                                            </th>
                                            <th style="width: 100px; text-align: right;">
                                                Precio
                                            </th>
                                            <th style="width: 100px; text-align: right;">
                                                Valor Venta
                                            </th>
                                            <th style="width: 70px; text-align: right;">
                                                IGV
                                            </th>
                                            <th style="width: 100px; text-align: right;">
                                                Importe
                                            </th>
                                            <th style="width: 50px; text-align: center;">
                                                ...
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="tBodyCompCompDeta">
                                        @foreach (var item in ViewBag.GuiaRemisionDetalle)
                                        {
                                            string IdTrGRDE = "TrGRDE" + NroTrCCDE;
                                            string TDFkProd = "TDFkProd" + IdTrGRDE;
                                            string TDCantCCD = "TDCantCCD" + IdTrGRDE;
                                            string TDPrecCCD = "TDPrecCCD" + IdTrGRDE;
                                            string TDTotaNeto = "TDTotaNeto" + IdTrGRDE;
                                            string TDTotaIgv = "TDTotaIgv" + IdTrGRDE;
                                            string TDTotaBruto = "TDTotaBruto" + IdTrGRDE;
                                            string TDBtnDeleteDeta = "TDBtnDeleteDeta" + IdTrGRDE;
                                            string TDFkTipoAfecIgv = "TDFkTipoAfecIgv" + IdTrGRDE;
                                            string TDFlgAfecIgv = "TDFlgAfecIgv" + IdTrGRDE;
                                            string TDPorcIgv = "TDPorcIgv" + IdTrGRDE;
                                            string TDHiddCant = "TDHiddCant" + IdTrGRDE;

                                            decimal SubTota = item.cantidad * item.precio_compra;
                                            //string strSubTota = string.Format("{0:###,###,###,##0.00##}", Decimal.Parse(SubTota.ToString()));
                                            totaCompComp = totaCompComp + SubTota;
                                            NroTrCCDE++;
                                            <tr id="@IdTrGRDE">
                                                <td id="@TDFkProd" class='input-xs' style='text-align: center; display: none;'>
                                                    @item.fk_producto
                                                </td>
                                                <td class='input-xs' style='text-align: center;'>
                                                    @item.cod_producto
                                                </td>
                                                <td class='input-xs' style='text-align: center;'>
                                                    @item.codigo_sku
                                                </td>
                                                <td class='input-xs'>
                                                    @item.nom_producto
                                                </td>
                                                <td class='input-xs'>
                                                    @item.descripcion_producto_marca
                                                </td>
                                                <td class='input-xs'>
                                                    @item.descripcion_producto_subfamilia
                                                </td>
                                                <td id="@TDCantCCD" class='input-xs' style='text-align: right;'>
                                                    @*@item.cantidad*@
                                                    @Html.Bootstrap().TextBox("txtCant").Value(@item.cantidad).Size(InputSize.XSmall).HtmlAttributes(new { @onchange = "FnValidaCantidad(this)", @onfocus = "this.oldvalue = this.value;", @type = "number", @min = "0", @style = "text-align: right;" })
                                                </td>
                                                <td id="@TDPrecCCD" class='input-xs' style='text-align: right;'>
                                                    @*@item.precio_compra*@
                                                    @Html.Bootstrap().TextBox("txtCant").Value(@item.precio_compra).Size(InputSize.XSmall).HtmlAttributes(new { @onchange = "FnValidaPrecio(this)", @onfocus = "this.oldvalue = this.value;", @type = "number", @min = "0", @style = "text-align: right;" })
                                                </td>
                                                <td id='@TDTotaNeto' class='input-xs' style='text-align: right;'></td>
                                                <td id='@TDTotaIgv' class='input-xs' style='text-align: right;'></td>
                                                <td id='@TDTotaBruto' class='input-xs' style='text-align: right;'></td>
                                                <td id='@TDBtnDeleteDeta' class='input-xs' style='text-align: center;'>
                                                    @Html.Bootstrap().Button().Text("").Color(BootstrapColors.Default).HtmlAttributes(new { @class = "danger", @title = "Eliminar Detalle", @onclick = "FnDeleteDetalle(this)" }).Shiny().Size(ButtonSize.Mini).IconOnly().IconPrepend(FontAwesome.Times)
                                                </td>
                                                <td id='@TDFkTipoAfecIgv' class='input-xs' style='display: none;'>@item.fk_tipo_afectacion_igv</td>
                                                <td id='@TDFlgAfecIgv' class='input-xs' style='display: none;'>@item.flag_afecto_igv</td>
                                                <td id='@TDPorcIgv' class='input-xs' style='display: none;'>@item.porcentaje</td>
                                                <td id='@TDHiddCant' class='input-xs' style='text-align: right; display: none;'>
                                                    @item.cantidad
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                @{
                                    string strTotaCompComp = string.Format("{0:###,###,###,##0.00##}", Decimal.Parse(totaCompComp.ToString()));
                                }
                                <table class="table table-striped table-hover table-bordered" id="tblTotalCompComp">
                                    <thead>
                                        <tr role="row">
                                            <td style="text-align: right;">
                                                TOTAL
                                            </td>
                                            <td id="TDCompVentTotaNeto" style="width: 100px; font-weight: bold; text-align: right;">@Model.total_neto</td>
                                            <td id="TDCompVentTotaIgv" style="width: 70px; font-weight: bold; text-align: right;">@Model.total_igv</td>
                                            <td id="TDCompVentTotaBruto" style="width: 100px; font-weight: bold; text-align: right;">@Model.total_bruto</td>
                                            <td style="width: 50px; font-weight: bold; text-align: right;"></td>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                        <div class="horizontal-space"></div>
                        <div class="row">
                            <div class="form-group" style="margin:0">
                                <div class="col-md-12">
                                    <textarea rows="2" id="txtNotaCred_Moti" onblur="InputToUpper(this);" style="width: 100%; text-transform: uppercase;" placeholder="CONCEPTO DE LA NOTA DE CREDITO (*)" maxlength="200"></textarea>
                                    <div class="horizontal-space"></div>
                                </div>
                            </div>
                        </div>
                        <div class="horizontal-space"></div>
                        <div class="row">
                            <div class="col-md-4" style="text-align:right;vertical-align:middle;width:50%">
                                @Html.Bootstrap().Button().Text("Guardar").Id("btnSaveEditCompComp").Color(BootstrapColors.Blue).Shiny().HtmlAttributes(new { @onclick = "FnValidaAfectaStock()" })
                            </div>
                            <div class="col-md-2">
                                <button class="btn bg-blue shiny" type="button" id="btnCancel" data-dismiss="modal">Cancelar</button>
                            </div>
                        </div>

                    </div>
                </div>
                                    }
        </div>
    </div>
</div>
<div id="spinnerNotaCredCreate" class="loading">
    <img src="~/img/spinner2.gif" alt="Loading" />
</div>
<script type="text/javascript">
    var arrNotaCredDeta = new Array();
    $(document).ready(function () {
        $("#spinnerNotaCredCreate").hide();
        $('#spinnerNotaCredCreate').bind("ajaxSend", function () {
            $(this).show();
        }).bind("ajaxComplete", function () {
            $(this).hide();
        });
        $('#loading').hide().ajaxStart(function () {
            $(this).show();
        }).ajaxStop(function () {
            $(this).hide();
            });
        $('.date-picker').datepicker();
    });

    function FnValidaAfectaStock() {
        var NroCompNC = $("#txtNotaCred_NroComp").val();
        var FechEmisNC = $("#txtNotaCred_FechEmis").val();
        var MotiNC = $("#txtNotaCred_Moti").val();
        var flgChkAfecStoc = document.getElementById("ChkNotaCred_AfecStoc").checked;
        var table = document.getElementById('tBodyCompCompDeta');
        var cantRows = table.rows.length;
        var flgError = 0;
        if (NroCompNC.trim() == "") {
            sweetAlert("", "Ingrese Nro del Comprobante", "error");
            flgError = 1;
        } else if (FechEmisNC.trim() == "") {
            sweetAlert("", "Ingrese fecha de emisión", "error");
            flgError = 1;
        } else if (MotiNC.trim() == "") {
            sweetAlert("", "Ingrese concepto de la Nota de Credito", "error");
            flgError = 1;
        }
        if (flgError == 0) {
            if (cantRows > 0) {
                if (flgChkAfecStoc) {
                    var arraIdProd = new Array();
                    var IndArr = 0;
                    var FkProd = 0;
                    var Cant = "";
                    for (var i = 0; i < cantRows; i++) {
                        newTr = table.rows[i].id;
                        if (newTr.trim() != "") {
                            FkProd = document.getElementById("TDFkProd" + newTr).innerHTML;
                            var objTxt = document.getElementById("TDCantCCD" + newTr).children;
                            Cant = objTxt[0].value;
                            objTxt = document.getElementById("TDPrecCCD" + newTr).children;
                            arraIdProd[IndArr] = new Array(2);
                            arraIdProd[IndArr][0] = FkProd.trim();
                            arraIdProd[IndArr][1] = Cant.trim();
                            IndArr++;
                        }
                    }
                    var options = { "backdrop": "static", keyboard: false };
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ViewSelecDescargarStock", "NotaCreditoCompra")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            arraIdProd: arraIdProd
                        }),
                        dataType: 'html',
                        success: function (response) {
                            $('#myModalContentViewSeleDescStock').html(response);
                            $('#myModalViewSeleDescStock').modal(options);
                            $('#myModalViewSeleDescStock').modal('show');
                        },
                        error: function (request, status, error) {
                            sweetAlert("", request.responseText, "error");
                        }
                    });
                }
                else {
                    var arrAlmaStoc = new Array();
                    FnSaveNewNotaCredito(arrAlmaStoc);
                }
            } else {
                sweetAlert("", "No hay detalles para la nota de crédito", "error");
            }
        }
    }

    function FnSaveNewNotaCredito(arrAlmaStoc) {
        var FkCompComp = $("#txtCompCompEdit_IdCompComp").val();
        var FechEmisNC = $("#txtNotaCred_FechEmis").val();
        var NroCompNC = $("#txtNotaCred_NroComp").val();
        var TotaNetoNC = parseFloat(document.getElementById("TDCompVentTotaNeto").innerHTML);
        var TotaIgvNC = parseFloat(document.getElementById("TDCompVentTotaIgv").innerHTML);
        var TotaBrutNC = parseFloat(document.getElementById("TDCompVentTotaBruto").innerHTML);
        var flgChkAfecStoc = document.getElementById("ChkNotaCred_AfecStoc").checked;
        var flgAfecStoc = "0";
        var MotiNC = $("#txtNotaCred_Moti").val();
        FnLlenaArrayNotaCredDetalle()
        var flgError = 0;
        if (flgChkAfecStoc) {
            flgAfecStoc = "1";
        }
        //if (NroCompNC.trim() == "") {
        //    sweetAlert("", "Ingrese Nro del Comprobante", "error");
        //    flgError = 1;
        //} else if (FechEmisNC.trim() == "") {
        //    sweetAlert("", "Ingrese fecha de emisión", "error");
        //    flgError = 1;
        //} else if (MotiNC.trim() == "") {
        //    sweetAlert("", "Ingrese concepto de la Nota de Credito", "error");
        //    flgError = 1;
        //}
        //if (flgError == 0) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveNewNotaCredito", "NotaCreditoCompra")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    FkCompComp: FkCompComp, NroCompNC: NroCompNC, FechEmisNC: FechEmisNC, TotaBrutNC: TotaBrutNC,
                    TotaIgvNC: TotaIgvNC, TotaNetoNC: TotaNetoNC, MotiNC: MotiNC, flgAfecStoc: flgAfecStoc,
                    arrNotaCredDeta: arrNotaCredDeta, arrAlmaStoc: arrAlmaStoc
                }),
                dataType: 'json',
                beforeSend: function () {
                    $('#spinnerNotaCredCreate').show();
                },
                traditional: true,
                success: function (data) {
                    swal({
                        title: "Exito!",
                        text: data,
                        type: "success",
                        confirmButtonText: "Ok",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                        function (isConfirm) {
                            if (isConfirm) {
                                location.reload();
                            }
                        });
                },
                error: function (data) {
                    sweetAlert("", data.responseText, "error");
                },
                complete: function () {
                    //check that it does exist and remove
                    if ($('#spinnerNotaCredCreate').length > 0) {
                        $('#spinnerNotaCredCreate').hide();
                    }
                }
            });
        //}
    }

    function FnLlenaArrayNotaCredDetalle() {
        arrNotaCredDeta = [];
        var IndArr = 0;
        var table = document.getElementById('tBodyCompCompDeta');
        var cantRows = table.rows.length;
        var newTr = "";
        var FkProd = 0;
        var Cant = "";
        var Prec = "";

        if (cantRows > 0) {
            for (var i = 0; i < cantRows; i++) {
                newTr = table.rows[i].id;
                if (newTr.trim() != "") {
                    FkProd = document.getElementById("TDFkProd" + newTr).innerHTML;
                    var objTxt = document.getElementById("TDCantCCD" + newTr).children;
                    Cant = objTxt[0].value;
                    objTxt = document.getElementById("TDPrecCCD" + newTr).children;
                    Prec = objTxt[0].value;
                    arrNotaCredDeta[IndArr] = new Array(3);
                    arrNotaCredDeta[IndArr][0] = FkProd.trim();
                    arrNotaCredDeta[IndArr][1] = Cant.trim();
                    arrNotaCredDeta[IndArr][2] = Prec.trim();
                    IndArr++;
                }
            }
        }
    }
</script>