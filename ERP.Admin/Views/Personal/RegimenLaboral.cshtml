@{
    ViewBag.Title = "Registro de Regimen laboral";
    ViewBag.Description = "regimen laboral";
    Layout = "~/Views/Shared/_Default.cshtml";
    ViewBag.LogoHorizontal = ViewBag.LogoHorizontals;
}
<script src="~/Scripts/exporter.js-master/export.min.js"></script>
<script src="~/Scripts/exporter.js-master/export.js"></script>
<script type="text/javascript">
</script>
@using System

@model IEnumerable<ERP.Admin.Models.RegimenLaboralErp>

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">Listado </span>
                <div class="widget-buttons">
                    @if (Request.UrlReferrer != null)
                    {
                        <a class="btn btn-danger" style="width:60px" onclick="history.go(-1); return false;" href="#">Atras</a>
                    }
                    @*<a id="NewPersona" class="btn btn-primary" style="width: 60px">
            Nuevo
        </a>*@
                    <a href="#" onclick="return Exporter.export(editabledatatable, 'Regimenes.xls', 'Regimenes')">
                        <img style="text-align: center; vertical-align: central; border: none !important;" src="~/img/Excel_32.ico" />
                    </a>
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>
                    <a href="#" data-toggle="dispose">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <div class="table-toolbar">

                </div>

                <table class="table table-striped table-hover table-bordered" id="editabledatatable" style="font-size:10px">
                    <thead>
                        <tr role="row">
                            <th style="display:none">
                                @Html.DisplayNameFor(model => model.IDREGIMENLABORAL)
                            </th>
                            <th  style="font-size:11px">
                                @Html.DisplayNameFor(model => model.DESCRIPCION)
                            </th>
                            <th style="font-size:11px">
                                @Html.DisplayNameFor(model => model.PUBLICO)
                            </th>
                            <th style="font-size:11px">
                                @Html.DisplayNameFor(model => model.PRIVADO)
                            </th>

                            <th>

                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td style="display:none">
                                    @Html.DisplayFor(modelItem => item.IDREGIMENLABORAL)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DESCRIPCION)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PUBLICO)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PRIVADO)
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-primary edita" style="padding: 2px; font-size: small; margin-top: -5px">Editar</button>
                                    <button class="btn btn-sm btn-danger elimina" style="padding: 2px; font-size: small; margin-top: -5px">Desactivar</button><br />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id='myModalNew' class='modal fade in' role="dialog">
    <div class="modal-dialog" style="width:750px; height:auto">
        <div class="modal-content">
            <div id='myModalContentNew'></div>
        </div>
    </div>
</div>

@section PageScripts{
    <link href="~/assets/css/dataTables.bootstrap.css" rel="stylesheet" />
    <script src="~/assets/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/ZeroClipboard.js"></script>
    <script src="~/assets/js/datatable/dataTables.tableTools.min.js"></script>
    <script src="~/assets/js/datatable/dataTables.bootstrap.min.js"></script>
    <script src="~/assets/js/datatable/datatables-init.js"></script>
    <script src="~/assets/js/datetime/bootstrap-datepicker.js"></script>
    <script src="~/assets/js/inputmask/jasny-bootstrap.min.js"></script>
    <script src="~/assets/js/select2/select2.js"></script>
    <!--Bootstrap Tags Input-->
    <script src="~/assets/js/tagsinput/bootstrap-tagsinput.js"></script>
    <script src="~/assets/js/datetime/moment.js"></script>
    <!--Bootstrap Date Picker-->
    <script src="~/assets/js/datetime/bootstrap-datepicker.js"></script>

    <script>
        var idafp = 0;
        $('#myModalNew').on('hide.bs.modal', function (e) {
            window.location.reload();
        });
        $('#myModalNew').on('shown.bs.modal', function (e) {
            var idx = $("#idafpx").val();
            var dnisx = $("#dnix").val();
            var nombressx = $("#nombresx").val();
            var apellido_paternosx = $("#apellido_paternox").val();
            var apellido_maternosx = $("#apellido_maternox").val();
            var f_nacimientosx = $("#f_nacimientosx").val();
            var emailsx = $("#emailsx").val();
            if (idx != "0") {
                console.log("emailsx:" + emailsx);
                $("#dni").val(dnisx);
                $("#nombres").val(nombressx);
                $("#apellido_paterno").val(apellido_paternosx);
                $("#apellido_materno").val(apellido_maternosx);
                $("#f_nacimiento").val(f_nacimientosx);
                $("#email").val(emailsx);
            }

            $("#GuardarPersona").click(function () {
                debugger;
                var idafp_save = 0;
                var dni = $("#dni").val();
                var nombres = $("#nombres").val();
                var apellido_paterno = $("#apellido_paterno").val();
                var apellido_materno = $("#apellido_materno").val();
                var email = $("#email").val();
                var f_nacimiento = $("#f_nacimiento").val();

                if (dni === '' || nombres === '' || apellido_paterno === '' || f_nacimiento === '') {
                    sweetAlert("", "Datos Incompletos", "error");
                    $("#dni").focus();
                    return false;
                }
                idafp_save = parseInt($("#idafpx").val(), 10);
                if (idafp_save == 0) {
                    $.ajax({
                        type: 'POST',
                        //url: "SaveTraslado",
                        url: '@Url.Action("GuardaPersona", "Persona")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            idafp : idafp_save,nombres: nombres, apellido_paterno: apellido_paterno, apellido_materno: apellido_materno,
                            f_nacimiento: f_nacimiento, email: email, dni: dni
                        }),
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            console.log(data);
                            idafp = data;
                            if (parseInt(idafp, 10) > 0) {
                                swal({
                                    title: 'Exito!',
                                    text: 'Persona se registró correctamente',
                                    type: 'success',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Ok'
                                }, function () {

                                    })
                                console.log("salirs");
                                $("#btnCancel").click();
                            } else {
                                sweetAlert("", "No se pudo registrar!", "error");
                                idafp = 0;
                            }
                        }
                    });
                }
                else
                {
                    $.ajax({
                        type: 'POST',
                        //url: "SaveTraslado",
                        url: '@Url.Action("GuardaPersona", "Persona")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            idafp: idafp_save,nombres: nombres, apellido_paterno: apellido_paterno, apellido_materno: apellido_materno,
                            f_nacimiento: f_nacimiento, email: email, dni: dni
                        }),
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            console.log(data);
                            idafp = data;
                            if (parseInt(idafp, 10) > 0) {
                                swal({
                                    title: 'Exito!',
                                    text: 'Persona se actualizó correctamente',
                                    type: 'success',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Ok'
                                }, function () {

                                    })
                                console.log("salirs");
                                $("#btnCancel").click();
                            } else {
                                sweetAlert("", "No se pudo registrar!", "error");
                                idafp = 0;
                            }
                        }
                    });
                }
            });
            $("#dni").blur(function () {
                var dnix = $("#dni").val();
                var lengthd = 0;
                try {
                    lengthd = dnix.length;
                } catch (e) {

                }
                if (dnix != "" && (lengthd > 0 && lengthd == 8)) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetPersonaDniAsync", "Persona")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ dnic: dnix }),
                        dataType: 'json',
                        traditional: true,
                        success: function (response) {
                            console.log("esta dni: " + JSON.stringify(response));
                            var respuesta = parseInt(response, 10);
                            if (respuesta == 1) {
                                console.log("dentro if ");
                                swal("", "DNI ya registrado", "error");
                                $("#dni").val('');
                                $(this).focus();
                            }
                        },
                        error: function (request, status, error) {
                            alert(request.responseText);
                        }
                    });
                }
            });
        });
        function InputToUpper(obj) {
            if (obj.value != "") {
                obj.value = obj.value.toUpperCase();
            }
        }

        $(document).on('click', '.edita', function () {
                    debugger;
                    var tableRow = $(this).closest("tr");
                    idafp = tableRow.find("td:eq(0)").text();
                    idafp = idafp.trim();
                    console.log("idgeneral: " + idafp);
                    var options = { "backdrop": "static", keyboard: false };
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("RegistroPersona", "Mantenimiento")',
                        contentType: "application/json; charset=utf-8",
                        data: { idafp: idafp },
                        dataType: 'html',
                        success: function (response) {
                            $('#myModalContentNew').html(response);
                            $('#myModalNew').modal(options);
                            $('#myModalNew').modal('show');
                        },
                        error: function (request, status, error) {
                            alert(request.responseText);
                        }
                    });
                    return false;
        });
        $(document).on('click', '.elimina', function () {
                    debugger;
                    var tableRow = $(this).closest("tr");
                    var idafp_save = tableRow.find("td:eq(0)").text();
                    idafp_save = idafp_save.trim();
                    var statux = tableRow.find("td:eq(7)").text();
                    statux = statux.trim();
                    console.log("status: " + statux);
                    var options = { "backdrop": "static", keyboard: false };
                    if (statux == "ACTIVO") {
                        $.ajax({
                        type: 'POST',
                        //url: "SaveTraslado",
                        url: '@Url.Action("EliminaPersona", "Persona")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            idafp: idafp_save
                        }),
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            console.log(data);
                            idafp = data;
                            if (parseInt(idafp, 10) > 0) {
                                swal({
                                    title: 'Exito!',
                                    text: 'Persona se desactivó correctamente',
                                    type: 'success',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Ok'
                                }, function () {

                                    })
                                console.log("salirs");
                                window.location.reload();
                            } else {
                                sweetAlert("", "No se pudo registrar!", "error");
                                idafp = 0;
                            }
                        }
                    });
                    }

                    return false;
                });
        $("#NewPersona").click(function () {
            //debugger;
            idafp = 0;
            var options = { "backdrop": "static", keyboard: false };
            $.ajax({
                type: 'GET',
                url: '@Url.Action("RegistroPersona", "Mantenimiento")',
                contentType: "application/json; charset=utf-8",
                data: { idafp: idafp },
                dataType: 'html',
                success: function (response) {
                    $('#myModalContentNew').html(response);
                    $('#myModalNew').modal(options);
                    $('#myModalNew').modal('show');
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        });

        $(document).ready(function () {
            Inicia();

        });
        //InitiateEditableDataTable.init();
        function Inicia() {
            //Datatable Initiating
            oTable = $('#editabledatatable').dataTable({
                "aLengthMenu": [
                    [5, 15, 20, 100, -1],
                    [5, 15, 20, 100, "All"]
                ],
                "retrieve": "true",
                "iDisplayLength": 20,
                "sPaginationType": "bootstrap",
                "sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                "oTableTools": {
                    "aButtons": [
                        //"copy",
                        "print"
                        //,
                        //{
                        //    "sExtends": "collection",
                        //    "sButtonText": "Save <i class=\"fa fa-angle-down\"></i>",
                        //    "aButtons": ["csv", "xls", "pdf"]
                        //}
                    ],
                    "sSwfPath": "assets/swf/copy_csv_xls_pdf.swf"
                },
                "language": {
                    "search": "",
                    "sLengthMenu": "_MENU_",
                    "oPaginate": {
                        "sPrevious": "Ant",
                        "sNext": "Sig"
                    }
                },

                "aoColumns": [
                    null,
                    null,
                    null,
                    null,
                    { "bSortable": false }
                ]
            });
            //console.log("nRowoTable: " + JSON.stringify($('#editabledatatable')));
            var isEditing = null;

            //Add New Row
            $('#editabledatatable_new').click(function (e) {
                e.preventDefault();
                var aiNew = oTable.fnAddData([
                    '', '', '', '',
                    '<a href="#" class="btn btn-success btn-xs save"><i class="fa fa-edit"></i> Save</a> <a href="#" class="btn btn-warning btn-xs cancel" data-mode="new"><i class="fa fa-times"></i> Cancel</a>'
                ]);
                console.log("aiNew: " + aiNew);
                var nRow = oTable.fnGetNodes(aiNew[0]);

                editAddedRow(oTable, nRow);
                isEditing = nRow;
            });

            //Delete an Existing Row
            $('#editabledatatable').on("click", 'a.delete', function (e) {
                e.preventDefault();

                if (confirm("Are You Sure To Delete This Row?") == false) {
                    return;
                }

                var nRow = $(this).parents('tr')[0];
                oTable.fnDeleteRow(nRow);
                alert("Row Has Been Deleted!");
            });

            //Cancel Editing or Adding a Row
            $('#editabledatatable').on("click", 'a.cancel', function (e) {
                e.preventDefault();
                if ($(this).attr("data-mode") == "new") {
                    var nRow = $(this).parents('tr')[0];
                    oTable.fnDeleteRow(nRow);
                    isEditing = null;
                } else {
                    restoreRow(oTable, isEditing);
                    isEditing = null;
                }
            });

            //Edit A Row
            $('#editabledatatable').on("click", 'a.edit', function (e) {
                e.preventDefault();

                var nRow = $(this).parents('tr')[0];

                if (isEditing !== null && isEditing != nRow) {
                    restoreRow(oTable, isEditing);
                    editRow(oTable, nRow);
                    isEditing = nRow;
                } else {
                    editRow(oTable, nRow);
                    isEditing = nRow;
                }
            });

            //Save an Editing Row
            $('#editabledatatable').on("click", 'a.save', function (e) {
                e.preventDefault();
                if (this.innerHTML.indexOf("Save") >= 0) {
                    saveRow(oTable, isEditing);
                    isEditing = null;
                    //Some Code to Highlight Updated Row
                }
            });


            function restoreRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);

                for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                    oTable.fnUpdate(aData[i], nRow, i, false);
                }

                oTable.fnDraw();
            }

            function editRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);
                jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
                jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';
                jqTds[2].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[2] + '">';
                jqTds[3].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[3] + '">';
                jqTds[4].innerHTML = '<a href="#" class="btn btn-success btn-xs save"><i class="fa fa-save"></i> Save</a> <a href="#" class="btn btn-warning btn-xs cancel"><i class="fa fa-times"></i> Cancel</a>';
            }

            function editAddedRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);
                jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
                jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';
                jqTds[2].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[2] + '">';
                jqTds[3].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[3] + '">';
                jqTds[4].innerHTML = aData[4];
            }

            function saveRow(oTable, nRow) {
                var jqInputs = $('input', nRow);
                oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                oTable.fnUpdate(jqInputs[2].value, nRow, 2, false);
                oTable.fnUpdate(jqInputs[3].value, nRow, 3, false);
                oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Edit</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Delete</a>', nRow, 4, false);
                oTable.fnDraw();
            }

            function cancelEditRow(oTable, nRow) {
                var jqInputs = $('input', nRow);
                oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                oTable.fnUpdate(jqInputs[2].value, nRow, 2, false);
                oTable.fnUpdate(jqInputs[3].value, nRow, 3, false);
                oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Edit</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Delete</a>', nRow, 4, false);
                oTable.fnDraw();
            }
        }
    </script>
}