@{
    ViewBag.Title = "CPP Personalizado";
    ViewBag.Description = "CPP Personalizado";
    Layout = "~/Views/Shared/_Default.cshtml";
}
<script type="text/javascript">
    function FnGenerarCuotas(obj) {
        var CantCuot = obj.value;
        if (CantCuot > 0) {
            var SimbMone = $("#HiddCronPers_SimbMone").val();
            $('#external-events').html('');
            var TotaBrut = $("#HiddCronPers_totaBrut").val();
            var MontCuot = (parseFloat(TotaBrut) / parseFloat(CantCuot)).toFixed(2);
            var divPrinc = document.getElementById("external-events");
            for (var i = 0; i < CantCuot; i++) {
                var newDiv = document.createElement('div');
                newDiv.className = "external-event";
                newDiv.style.width = "150px";
                //newDiv.innerHTML = "<span> <b>Monto: </b></span><span>100</span> <br />";
                var newSapn = document.createElement('span');
                newSapn.style.width = '20px';
                newSapn.innerHTML = "<b>" + SimbMone + " </b>";
                newDiv.appendChild(newSapn);
                newSapn = document.createElement('span');
                //newSapn.innerHTML = MontCuot;

                var newInput = document.createElement("INPUT");
                var IdText = "txt_" + i.toString();
                newInput.setAttribute("type", "number");
                newInput.setAttribute("value", MontCuot);
                newInput.setAttribute("id", IdText);
                newInput.setAttribute("onchange", "FnChangeMonto(this, '"+ i +"')");
                newInput.style.width = '100px';
                newInput.style.textAlign = 'right';
                newSapn.appendChild(newInput);
                newDiv.appendChild(newSapn);

                newSapn = document.createElement('span');
                var IdSpan = "span" + i.toString();
                newSapn.id = IdSpan;
                newSapn.style.display = 'none';
                newSapn.innerHTML = MontCuot;

                newDiv.appendChild(newSapn);
                divPrinc.appendChild(newDiv);
            }
            document.getElementById('btnHabilitar').disabled = false;
            //FnInitExternalEvents();
        } else {
            sweetAlert("", "Nro de Cuotas no válido", "error");
            $('#external-events').html('');
            document.getElementById('btnHabilitar').disabled = true;
        }
    }

    function FnChangeMonto(obj, identif) {
        var newMontCuot = parseFloat(obj.value);
        if (newMontCuot <= 0) {
            sweetAlert("", "Valor no Válido", "error");
            obj.value = 0;
            obj.focus();
        } else {
            document.getElementById("span" + identif).innerHTML = newMontCuot;
            //FnInitExternalEvents();
        }
    }

    function FnHabilitar() {
        var SumaCuot = 0;
        var TotaBrut = $("#HiddCronPers_totaBrut").val();
        $('#external-events :input').each(function () {
            var $this = $(this);
            SumaCuot = parseFloat(SumaCuot) + parseFloat($this.val());
        });
        SumaCuot = SumaCuot.toFixed(2);
        if (parseFloat(SumaCuot) != parseFloat(TotaBrut)) {
            var MontDiff = (parseFloat(TotaBrut) - parseFloat(SumaCuot)).toFixed(2);
            sweetAlert("", "La sumatoria de las cuotas no coinside con el Importe Total \n Importe Total = " + TotaBrut + "\n Suma de Cuotas = " + SumaCuot + "\n Diferencia = " + MontDiff, "error");
        } else {
            FnInitExternalEvents();
            $('#external-events :input').each(function () {
                var $this = $(this);
                $this.prop('readonly', true);
            });
            document.getElementById('btnHabilitar').disabled = true;
        }
    }

    function FnInitExternalEvents() {
        /* initialize the external events
            -----------------------------------------------------------------*/
        $('#external-events .external-event').each(function () {

            // store data so the calendar knows to render an event upon drop
            $(this).data('event', {
                title: $.trim($(this).text()), // use the element's text as the event title
                stick: true // maintain when user navigates (see docs on the renderEvent method)
            });

            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });
        /* initialize the external events */
    }
</script>
@{
    int IdCompComp = ViewBag.ComprobanteCompra.id_comprobante_compra;
    string DescTipoMone = ViewBag.ComprobanteCompra.descripcion_tipo_moneda;
    decimal totaBrut = ViewBag.ComprobanteCompra.total_bruto;
    int FkTipoMone = ViewBag.ComprobanteCompra.id_tipo_moneda;
    string SimbMone = "S/.";
    if (FkTipoMone.Equals(2))
    {
        SimbMone = "$.";
    }
}
@Html.Hidden("HiddCronPers_IdCompComp", IdCompComp)
@Html.Hidden("HiddCronPers_FkTipoMone", FkTipoMone)
@Html.Hidden("HiddCronPers_totaBrut", totaBrut)
@Html.Hidden("HiddCronPers_SimbMone", SimbMone)
<div class="row">
    <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
        <div class="widget flat">
            <div class="widget-header bordered-bottom bordered-orange">
                <i class="widget-icon glyphicon glyphicon-plus orange"></i>
                <span class="widget-caption">GENERAR CUOTAS</span>
            </div><!--Widget Header-->
            <div class="widget-body">
                <div class='orange' style="border-left: 2px;">
                    <span><b>Moneda: </b></span><span> @DescTipoMone</span><br />
                    <span><b>Importe Total: </b></span><span> @totaBrut</span><br />
                    <span style="width: 50px;"><b>Nro Cuotas: </b></span><span><input id="TxtCronPers_CantCuot" type="number" min="0" style="width: 80px; text-align: right;" onchange="FnGenerarCuotas(this)" /></span><br /><br />
                    <span><b><u>CUOTAS GENERADAS</u></b></span><br />
                    <span>@Html.Bootstrap().Button().Text("Habilitar Para Distribuir").Id("btnHabilitar").Color(BootstrapColors.Primary).Size(ButtonSize.Mini).HtmlAttributes(new { @title = "Habilita las cuotas generaradas para ser distribuidas en el calendario", @onclick = "FnHabilitar()", @style = "margin-top: 5px; float: right;", @disabled = "disabled" })</span><br />
                </div>
                <br />
                <div id='external-events'>
                </div>
            </div><!--Widget Body-->
        </div>
    </div>
    <button id="btnSaveCronograma" class="btn btn-danger">
        GUARDAR CRONOGRAMA
    </button>
    <div class="col-lg-9 col-md-9 col-sm-12 col-xs-12">
        <div class="widget flat">
            <div class="widget-header bordered-bottom bordered-sky">
                <i class="widget-icon fa fa-calendar sky"></i>
                <span class="widget-caption">Calendario</span>
            </div><!--Widget Header-->
            <div class="widget-body">
                <div id='calendar'></div>
            </div><!--Widget Body-->
        </div>
    </div>
</div>
<div id="spinnerCPPCronPers" class="loading">
    <img src="~/img/spinner2.gif" alt="Loading" />
</div>
@section PageScripts{
    <style>
        .loading {
            position: fixed;
            z-index: 999;
            height: 2em;
            width: 2em;
            overflow: show;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
        }
            /* Transparent Overlay */
            .loading:before {
                content: '';
                display: block;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0,0,0,0.3);
            }
    </style>
    <script src='~/assets/js/fullcalendar/moment.min.js'></script>
    <script src='~/assets/js/fullcalendar/jquery-ui.custom.min.js'></script>
    <script src='~/assets/js/fullcalendar/fullcalendar.min.js'></script>

    <link href="~/Scripts/sweetalert.css" rel="stylesheet" />
    <script src="~/Scripts/sweetalert-dev.js"></script>
    <script src="~/Scripts/sweetalert.min.js"></script>
    <script>
        var jsonCuotasCPP = "";
        var arrCtasPorPaga = new Array();
        $(document).ready(function () {
            $("#spinnerCPPCronPers").hide();
            $('#spinnerCPPCronPers').bind("ajaxSend", function () {
                $(this).show();
            }).bind("ajaxComplete", function () {
                $(this).hide();
            });
            $('#loading').hide().ajaxStart(function () {
                $(this).show();
            }).ajaxStop(function () {
                $(this).hide();
            });
            /* initialize the external events
            -----------------------------------------------------------------*/
            $('#external-events .external-event').each(function () {

                // store data so the calendar knows to render an event upon drop
                $(this).data('event', {
                    title: $.trim($(this).text()), // use the element's text as the event title
                    stick: true // maintain when user navigates (see docs on the renderEvent method)
                });

                // make the event draggable using jQuery UI
                $(this).draggable({
                    zIndex: 999,
                    revert: true,      // will cause the event to go back to its
                    revertDuration: 0  //  original position after the drag
                });

            });
            /* initialize the external events
            -----------------------------------------------------------------*/
            $('#calendar .calendar').each(function () {

                // store data so the calendar knows to render an event upon drop
                $(this).data('event', {
                    title: $.trim($(this).text()), // use the element's text as the event title
                    stick: true, // maintain when user navigates (see docs on the renderEvent method)
                });

                // make the event draggable using jQuery UI
                $(this).draggable({
                    zIndex: 999,
                    revert: true,      // will cause the event to go back to its
                    revertDuration: 0  //  original position after the drag
                });
            });
            /* initialize the calendar
            -----------------------------------------------------------------*/
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: ''
                },
                editable: true,
                droppable: true, // this allows things to be dropped onto the calendar
                displayEventTime: false,
                //selectable: true,
                //selectHelper: true,
                drop: function () {
                    $(this).remove();
                    $("#TxtCronPers_CantCuot").prop('readOnly', true);
                },
            });
        });

        $("#btnSaveCronograma").click(function () {
            var CantCuot = $("#TxtCronPers_CantCuot").val();
            var CantChild = document.getElementById('external-events').childElementCount;
            var flgError = 0;
            if (CantCuot == "") {
                sweetAlert("", "No ha generado cuotas", "error");
                flgError = 1;
            } else if (CantCuot <= 0) {
                sweetAlert("", "No ha generado cuotas", "error");
                flgError = 1;
            } else if (CantChild > 0) {
                sweetAlert("", "Aún tiene cuotas por distribuir", "error");
                flgError = 1;
            }
            if (flgError == 0) {
                var url = '/CuentasPorPagar/Index';
                var FkCompComp = $("#HiddCronPers_IdCompComp").val();
                var FkTipoMone = $("#HiddCronPers_FkTipoMone").val();
                var varArr = $("#calendar").fullCalendar('clientEvents');
                var IdCtasPorPaga = 0;
                var Mont = "";
                for (k = 0; k < varArr.length; k++) {
                    if (parseInt(FkTipoMone) == 1) {
                        Mont = varArr[k].title.toString().replace("S/.", "");
                    }
                    else {
                        Mont = varArr[k].title.toString().replace("$.", "");
                    }
                    arrCtasPorPaga[k] = new Array(4);
                    arrCtasPorPaga[k][0] = IdCtasPorPaga;
                    arrCtasPorPaga[k][1] = varArr[k].start;
                    arrCtasPorPaga[k][2] = Mont;
                    arrCtasPorPaga[k][3] = Mont;
                }
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveNewCuentasPorPagar", "CuentasPorPagar")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        FkCompComp: FkCompComp, FkTipoMone: FkTipoMone, arrCtasPorPaga: arrCtasPorPaga
                    }),
                    dataType: 'json',
                    beforeSend: function () {
                        $('#spinnerCPPCronPers').show();
                    },
                    traditional: true,
                    success: function (data) {
                        swal({
                            title: "Exito!",
                            text: data,
                            type: "success",
                            confirmButtonText: "Ok",
                            closeOnConfirm: false,
                            closeOnCancel: false
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                     window.location = "/CuentasPorPagar/Index"
                                }
                            });
                    },
                    error: function (data) {
                        sweetAlert("", data.responseText, "error");
                    },
                    complete: function () {
                        //check that it does exist and remove
                        if ($('#spinnerCPPCronPers').length > 0) {
                            $('#spinnerCPPCronPers').hide();
                        }
                    }
                });
            }
        });
    </script>
}