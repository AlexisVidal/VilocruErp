@model IEnumerable<ERP.Admin.Models.Conductor>
@{
    string IdTrCond = "";
    string TDIdCond = "";
    string TDNroLice = "";
    string TDNombCond = "";
    string strNombCond = "";

    string CallBy = ViewBag.CallBy;
}
@Html.Hidden("txtCondList_CallBy", CallBy)
<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">Orden de Compra > Listado </span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>
                    <a href="#" data-toggle="dispose">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <table class="table table-striped table-hover table-bordered" id="editableCompra">
                    <thead>
                        <tr role="row">
                            <th style="display:none">
                                ID_CONDUCTOR
                            </th>
                            <th>
                                Nro Licencia
                            </th>
                            <th>
                                Nombres
                            </th>
                            <th>
                                Estado
                            </th>
                            <th style="display: none;">
                                HiddEstado
                            </th>
                            <th>
                                ...
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {
                            strNombCond = item.nombres + " " + item.apellido_paterno + " " + item.apellido_materno;
                            IdTrCond = "TrComp" + item.id_conductor;
                            TDIdCond = "TDIdCond" + IdTrCond;
                            TDNroLice = "TDNroLice" + IdTrCond;
                            TDNombCond = "TDNombCond" + IdTrCond;
                            <tr id="@IdTrCond">
                                <td id="@TDIdCond" style="display:none">
                                    @Html.DisplayFor(modelItem => item.id_conductor)
                                </td>
                                <td id="@TDNroLice" class="input-xs">
                                    @Html.DisplayFor(modelItem => item.n_licencia)
                                </td>
                                <td id="@TDNombCond" class="input-xs">
                                    @strNombCond
                                </td>
                                <td class="input-xs">
                                    @Html.DisplayFor(modelItem => item.NEstado)
                                </td>
                                <td style="display: none;">
                                    @Html.DisplayFor(modelItem => item.estado)
                                </td>
                                <td>
                                    @if (item.estado == "1")
                                    {
                                        <a class="btn btn-success btn-xs" onclick="FnSelecConductor(this)"> Seleccionar</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="horizontal-space"></div>
                <div class="row">
                    <div class="col-md-2" style="text-align:right; vertical-align: middle; width:60%">
                        <button class="btn bg-blue shiny" type="button" id="btnCancel" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        Inicia();
    });

    function FnSelecConductor(obj) {
        var IdTrsele = obj.parentElement.parentElement.id;
        var IdCond = document.getElementById("TDIdCond" + IdTrsele).innerHTML.trim();
        var NroLice = document.getElementById("TDNroLice" + IdTrsele).innerHTML.trim();
        var NombCond = document.getElementById("TDNombCond" + IdTrsele).innerHTML.trim();
        var CallBy = $("#txtCondList_CallBy").val();
        if (IdCond.trim() != "") {
            if (CallBy.trim() == "GuiaRemiCreate") {
                FnAddDataConductorCreate(IdCond, NroLice, NombCond);
            } else if (CallBy.trim() == "GuiaRemiEdit") {
                FnAddDataConductorEdit(IdCond, NroLice, NombCond);
            }
            $('#myModalConductor').modal('hide');
        }
    }

    //InitiateeditableCompra.init();
    function Inicia() {
        //Datatable Initiating
        oTable = $('#editableCompra').dataTable({
            "aLengthMenu": [
                [5, 10, 15, 20, 100, -1],
                [5, 10, 15, 20, 100, "All"]
            ],
            "retrieve": "true",
            "iDisplayLength": 10,
            "sPaginationType": "bootstrap",
            "sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
            "oTableTools": {
                "aButtons": [
                    //"copy",
                    //"print"
                    //,
                    //{
                    //    "sExtends": "collection",
                    //    "sButtonText": "Save <i class=\"fa fa-angle-down\"></i>",
                    //    "aButtons": ["csv", "xls", "pdf"]
                    //}
                ],
                "sSwfPath": "assets/swf/copy_csv_xls_pdf.swf"
            },
            "language": {
                "search": "",
                "sLengthMenu": "_MENU_",
                "oPaginate": {
                    "sPrevious": "Ant",
                    "sNext": "Sig"
                }
            },

            "aoColumns": [
                null,
                null,
                null,
                null,
                null,
                { "bSortable": false }
            ]
        });
        //console.log("nRowoTable: " + JSON.stringify($('#editableCompra')));
        var isEditing = null;
    }
</script>
